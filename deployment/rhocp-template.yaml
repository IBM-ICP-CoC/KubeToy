apiVersion: v1
kind: Template
metadata:
  name: kubetoy-template
  annotations:
    description: "Kubetoy is a simple node.js application used to explore kubernetes."
    iconClass: "icon-nodejs"
    tags: "toy,nodejs"
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: kubetoy-deployment
    labels:
      app: kubetoy-app
  spec:
      selector:
        matchLabels:
          app: kubetoy
      replicas: 3
      template:
        metadata:
          labels:
            app: kubetoy
        spec:
          containers:
          - name: kubetoy
            image: docker.io/ibmicpcoc/kubetoy:latest
            resources:
              requests:
                memory: "64Mi"
                cpu: "250m"
              limits:
                memory: "128Mi"
                cpu: "1"
            imagePullPolicy: IfNotPresent
            ports:
            - containerPort: 3000
            volumeMounts:
            - name: configvol
              mountPath: /var/config
            - name: secretvol
              mountPath: /var/secret
            livenessProbe:
              httpGet:
                path: /health
                port: 3000
              initialDelaySeconds: 10
              periodSeconds: 5
            env:
            - name: ENV_TOY_CONFIGMAP
              valueFrom: 
                configMapKeyRef:
                  name: kubetoy-configmap-env
                  key: ENV_TOY_CONFIGMAP
            - name: ENV_TOY_SECRET
              valueFrom:
                secretKeyRef:
                  name: kubetoy-secret-env
                  key: ENV_TOY_SECRET
          volumes:
          - name: configvol
            configMap:
              name: kubetoy-configmap-files
          - name: secretvol
            secret:
              secretName: kubetoy-secret-files
- apiVersion: v1
  kind: Service
  metadata:
    name: kubetoy-service
    labels:
      app: kubetoy-app
  spec:
    type: ClusterIP
    ports:
      - targetPort: 3000
        port: 3000
        protocol: TCP
        name: "http"
    selector:
      app: kubetoy
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: kubetoy-configmap-env
  data:
    ENV_TOY_CONFIGMAP: 'This is a configuration value.'
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: kubetoy-configmap-files
  data:
    config.json: '{ "default": "123" }'
- apiVersion: v1
  kind: Secret
  metadata:
    name: kubetoy-secret-env
  type: Opaque
  data:
    ENV_TOY_SECRET: VGhpcyBpcyBhIHRlc3Q=
- apiVersion: v1
  kind: Secret
  metadata:
    name: kubetoy-secret-files
  type: Opaque
  data:
    toy-secret.txt: U2hoLi4uIFRoaXMgaXMgYSBzZWNyZXQu
- apiVersion: v1
  kind: Route
  metadata:
    name: kubetoy-route
  spec:
    host: ${ROUTE}
    to:
      kind: Service
      name: kubetoy-service
parameters:
- name: ROUTE
  description: Route
  value: ""


